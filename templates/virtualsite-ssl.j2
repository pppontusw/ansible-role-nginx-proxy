# {{ ansible_managed }}
{% if item.upstream_server is defined %}
upstream {% if item.upstream_name is defined %}{{item.upstream_name}}{% else %}{{item.site_id}}{% endif %} {
        server {{item.upstream_server}};
{% if item.upstream_extras is defined %}
{% for extra in item.upstream_extras %}
        {{extra}};
{% endfor %}
{% endif %}
}
{% endif %}


server {
{% if item.custom_http_block is not defined %}
        listen {{item.http_port}};
        server_name {{item.server_names}};

{% if item.letsencrypt is defined and item.letsencrypt %}
        location '/.well-known/acme-challenge' {
                default_type "text/plain";
                root        /tmp/letsencrypt-auto;
        }
        location / {
                return              301 https://$server_name$request_uri;
        }
{% else %}
        rewrite ^ https://$server_name$request_uri? permanent;
{% endif %}

{% endif %}
{% if item.custom_http_block is defined %}
        {{ item.custom_http_block }}
{% endif %}
}

server {
{% if item.custom_https_block is not defined %}
        listen {{item.https_port}};
        server_name {{item.server_names}};

        ssl on;
{% if item.letsencrypt is defined and item.letsencrypt %}
        ssl_certificate /etc/letsencrypt/live/{{ item.site_id }}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/{{ item.site_id }}/privkey.pem;
{% else %}
        ssl_certificate {{nginx_proxy_ssl_store_path}}/{{ item.site_id }}/cert.pem;
        ssl_certificate_key {{nginx_proxy_ssl_store_path}}/{{ item.site_id }}/key.pem;
{% endif %}

{% if item.ssl_protocols is defined %}
        ssl_protocols       {{item.ssl_protocols}};
{% else %}
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
{% endif %}

        location / {
                proxy_pass {{item.proxy_pass}};
{% if item.proxy_redirect is defined %}
                proxy_redirect {{item.proxy_redirect}};
{% else %}
                proxy_redirect off;
{% endif %}
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr ;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for ;
                proxy_set_header X-Forwarded-Proto https;
        }
{% endif %}
{% if item.custom_https_block is defined %}
        {{ item.custom_https_block }}
{% endif %}
}